<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="docx4j">
    <property environment="env"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
	<property name="dist" value="./dist"/>
	
	<property name="version" value="2.8.1"/>

    <property name="src.main.java.dir" value="src/main/java"/>
	
	<property name="m2Repository" value="../../../.m2/repository"/>	
    <path id="Maven Dependencies.libraryclasspath">
    
        <pathelement location="${m2Repository}/org/plutext/jaxb-svg11/1.0.2/jaxb-svg11-1.0.2.jar"/>
        <pathelement location="${m2Repository}/org/plutext/jaxb-xslfo/1.0.1/jaxb-xslfo-1.0.1.jar"/>
        <pathelement location="${m2Repository}/org/plutext/jaxb-xmldsig-core/1.0.0/jaxb-xmldsig-core-1.0.0.jar"/>
        
        <pathelement location="${m2Repository}/log4j/log4j/1.2.15/log4j-1.2.15.jar"/>
        <pathelement location="${m2Repository}/commons-lang/commons-lang/2.4/commons-lang-2.4.jar"/>
        <pathelement location="${m2Repository}/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar"/>
        <pathelement location="${m2Repository}/commons-codec/commons-codec/1.3/commons-codec-1.3.jar"/>
        <pathelement location="${m2Repository}/org/apache/xmlgraphics/xmlgraphics-commons/1.4/xmlgraphics-commons-1.4.jar"/>
        <pathelement location="${m2Repository}/commons-io/commons-io/1.3.1/commons-io-1.3.1.jar"/>
        <pathelement location="${m2Repository}/org/apache/xmlgraphics/fop/1.0/fop-1.0.jar"/>
        <pathelement location="${m2Repository}/org/apache/avalon/framework/avalon-framework-api/4.3.1/avalon-framework-api-4.3.1.jar"/>
        <pathelement location="${m2Repository}/org/apache/avalon/framework/avalon-framework-impl/4.3.1/avalon-framework-impl-4.3.1.jar"/>
    	<!-- Xalan 2.7.1 and dependencies: see further below -->
        <pathelement location="${m2Repository}/net/arnx/wmf2svg/0.9.0/wmf2svg-0.9.0.jar"/>
        <pathelement location="${m2Repository}/org/apache/poi/poi-scratchpad/3.8/poi-scratchpad-3.8.jar"/>
        <pathelement location="${m2Repository}/org/apache/poi/poi/3.8/poi-3.8.jar"/>
        <pathelement location="${m2Repository}/com/googlecode/jaxb-namespaceprefixmapper-interfaces/JAXBNamespacePrefixMapper/2.2.4/JAXBNamespacePrefixMapper-2.2.4.jar"/>    

        <pathelement location="${m2Repository}/org/antlr/antlr-runtime/3.3/antlr-runtime-3.3.jar"/>    
        <pathelement location="${m2Repository}/antlr/antlr/2.7.7/antlr-2.7.7.jar"/>    
        <pathelement location="${m2Repository}/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar"/> 
    	
        <pathelement location="${m2Repository}/org/docx4j/xhtmlrenderer/1.0.0/xhtmlrenderer-1.0.0.jar"/>    
        <pathelement location="${m2Repository}/com/lowagie/itext/2.1.7/itext-2.1.7.jar"/>
    	

        <!--<pathelement location="${m2Repository}/junit/junit/4.8/junit-4.8.jar"/>-->
        
<!-- Uncomment to use the vfs stuff in docx4j-extras

        <pathelement location="${m2Repository}/jdom/jdom/1.0/jdom-1.0.jar"/>
        <pathelement location="${m2Repository}/org/apache/commons/commons-vfs-patched/1.9.1/commons-vfs-patched-1.9.1.jar"/>
-->

<!-- Uncomment for load/save via JCR, which
		may be found in docx4j-extras.		
        <pathelement location="${m2Repository}/javax/jcr/jcr/1.0/jcr-1.0.jar"/>
		-->
 
<!--    Uncomment for the PDF conversion via HTML or iText, which
		may be found in docx4j-extras.
		
		If you are planning to use that, you'll also want to uncomment
		the BaseFont stuff in PhysicalFonts. 	
		
        <pathelement location="${m2Repository}/com/lowagie/itext-unsigned/2.0.8/itext-unsigned-2.0.8.jar"/>    	
	    -->	    
<!--    Uncomment for the PDF conversion via HTML, which
		may be found in docx4j-extras. Note that core-renderer R8pre2 incompatible with iText SVN 	
        <pathelement location="${m2Repository}/pdf-renderer/pdf-renderer/0.2009.0324/pdf-renderer-0.2009.0324.jar"/>
        <pathelement location="${m2Repository}/xhtmlrenderer/minium/0.1/minium-0.1.jar"/>
        <pathelement location="${m2Repository}/xhtmlrenderer/core-renderer/R8pre2/core-renderer-R8pre2.jar"/>
-->

<!-- As from 2010 09 17 source is included (see src/main/java/org/jvnet..)
	 so this is no longer required.
        <pathelement location="${m2Repository}/org/jvnet/jaxb2_commons/ppp/parent-pointer-plugin/1.0/parent-pointer-plugin-1.0.jar"/>
 -->
    </path>
    <path id="docx4j.classpath">
        <pathelement location="bin"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>

    <path id="dist.classpath">
        <pathelement location="${m2Repository}/xalan/xalan/2.7.1/xalan-2.7.1.jar"/>
        <pathelement location="${m2Repository}/xalan/serializer/2.7.1/serializer-2.7.1.jar"/>
        <pathelement location="${m2Repository}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar"/>
        <path refid="docx4j.classpath"/>
    </path>

    <path id="junit.classpath">
        <path refid="docx4j.classpath"/>
        <pathelement location="${m2Repository}/junit/junit/4.8/junit-4.8.jar"/>
    </path>
	
	<path id="jre.libs" description="Java runtime libraries">
	  <pathelement location="${java.home}\lib" />
	 </path>	
	
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="${src.main.java.dir}" excludes="**/*.launch, **/*.java"/>
            <fileset dir="src/pptx4j/java" excludes="**/*.launch, **/*.java"/>
            <fileset dir="src/main/resources" excludes="log4j.*, docx4j.properties"/>
        </copy>
    </target>
	
    <target name="clean">
        <delete dir="bin"/>
        <delete dir="dist"/>
    </target>
    <target depends="build-project" name="build"/>
   
    <target name="build-project" depends="init" >
        <echo message="${ant.project.name}: ${ant.file}"/>
        <echo message="${ant.java.version}"/>
        
        <javac  bootclasspathref="jre.libs" includeJavaRuntime="yes" 
        	debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" 
        	target="${target}">
            <src path="${src.main.java.dir}"/>
            <src path="src/diffx"/>
            <src path="src/glox4j/java"/>
            <src path="src/pptx4j/java"/>
            <src path="src/xlsx4j/java"/>
            <!-- <classpath refid="docx4j.classpath"/> -->
            <!--  build with earlier than

					java version "1.6.0_19" (and possibly later)
					Java(TM) SE Runtime Environment (build 1.6.0_19-b04)
					Java HotSpot(TM) 64-Bit Server VM (build 16.2-b04, mixed mode)

				 requires  Xalan 2.7.1, so -->
			<classpath refid="dist.classpath"/>				 
        </javac>
        
        <!--  Force ant to compile package-info.java.
              Without these, you'll get JAXB "unexpected element" errors.
        	  This is necessary because of a dubious change in ant behaviour, 
              starting with 1.7.1 (see javac task doc, and ant bug 43114).  
              
			  "In Ant 1.7.1 the package-info.java will only be compiled if:
				
				   1. If a package-info.class file exists and is older than the package-info.java file.
				   2. If the directory for the package-info.class file does not exist.
				   3. If the directory for the package-info.class file exists, and has an older modification 
				   time than the the package-info.java file. In this case <javac> will touch the corresponding 
				   .class directory on successful compilation."              
              -->
        <sleep seconds="2"/> <!--  wait a little, so our modifications times are newer -->
        <touch><fileset dir="${src.main.java.dir}" includes="**/package-info.java" /></touch>        
        <touch><fileset dir="src/pptx4j/java" includes="**/package-info.java" /></touch>        
        <javac  bootclasspathref="jre.libs" includeJavaRuntime="yes" 
        	debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="${src.main.java.dir}"/>
            <src path="src/pptx4j/java"/>
            <src path="src/xlsx4j/java"/>
        	<include name="**/package-info.java"/>
            <classpath refid="docx4j.classpath"/>
        </javac>

        <echo message="Join the docx4j developers mailing list by emailing docx4j-dev-subscribe@docx4java.org" />
        
    </target>
 
 
 <!-- ANT_OPTS="-Xmx512m -XX:MaxPermSize=256m" ant dist -->
    <target name="dist"  depends="clean, build-project" >
				
        <mkdir dir="${dist}"/>
				
		<jar destfile="${dist}/docx4j-${version}.jar" basedir="./bin"/>		
		
		<!-- copy all the jar files! -->
		<copy todir="${dist}" flatten="true">
			<!-- requires Ant 1.7.0 -->
			<path>
			    <path refid="dist.classpath"/>
			</path>
		</copy>		
    	 <delete file="${dist}/JAXBNamespacePrefixMapper-2.2.4.jar" />			
    </target>	


	<!--  build just diffx; the usual targets build diffx as part of docx4j -->
    <target name="build-diffx" depends="init" >
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac  bootclasspathref="jre.libs" includeJavaRuntime="yes" 
        	debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src/diffx"/>
            <classpath refid="docx4j.classpath"/>
        </javac>
    </target>

    <target name="diffxjar"  depends="clean, build-diffx" >							
		<jar destfile="diffx.jar" basedir="./bin"/>									
    </target>	

	
	<target name="javadoc">
	
        <delete dir="javadoc"/>
        <mkdir dir="javadoc"/>
	
		
        <javadoc access="public" author="false" 
         destdir="javadoc" 
         doctitle="docx4j 2.7.0" 
         nodeprecated="false" 
         nodeprecatedlist="false" 
         noindex="false" 
         nonavbar="false" 
         notree="false" 
         source="1.6" 
        sourcepath="src/main/java:src/pptx4j/java:src/xlsx4j/java:src/glox4j/java:src/diffx" 
        splitindex="true" use="true" version="false"
        maxmemory="512m">
                    <classpath refid="docx4j.classpath"/>
        </javadoc>
		
<!-- 		
      <Doctitle><![CDATA[<h1>docx4j API Documentation</h1>]]></Doctitle>
      <bottom>
        <![CDATA[<i>Copyright 2007-2008 Plutext Pty Ltd.</i>]]>
      </bottom>
      <group>
        <title>dml - DrawingML</title>
        <package name="org.docx4j.dml*"/>
      </group>
      <group>
        <title>wml - WordprocessingML</title>
        <package name="org.docx4j.wml*"/>
      </group>
       -->		
	
	</target>
	
    <target name="test" depends="dist">

	    <path id="tests.classpath">
	    	<pathelement location="${dist}/docx4j.jar" />
	        <path refid="Maven Dependencies.libraryclasspath"/>
	        <pathelement location="${m2Repository}/xalan/xalan/2.7.1/xalan-2.7.1.jar"/>
	        <pathelement location="${m2Repository}/xalan/serializer/2.7.1/serializer-2.7.1.jar"/>
	        <pathelement location="${m2Repository}/xml-apis/xml-apis/1.3.04/xml-apis-1.3.04.jar"/>
	        <pathelement location="${m2Repository}/junit/junit/4.8/junit-4.8.jar"/>	    	
	    </path>    	
        
    	<!--  Make jar containing tests only  -->
        <delete file="docx4j-tests-only.jar"/>
        <delete dir="testing"/>
        <mkdir dir="testing"/>
        <javac debug="off" destdir="testing" source="${source}" target="${target}">
            <src path="src/test/java"/>
            <classpath refid="tests.classpath"/>
        </javac>
        <copy includeemptydirs="false" todir="testing">
            <fileset dir="src/test/resources">
                <include name="**/*"/> 
            </fileset>
        </copy>
	   	 <jar destfile="docx4j-tests-only.jar">
	   	    <fileset dir="./testing" />
	   	  </jar>    	

	    <path id="testsplus.classpath">
	    	<pathelement location="docx4j-tests-only.jar" />
	        <path refid="tests.classpath"/>
	    </path>
    	
        <delete dir="${junit.output.dir}"/>
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="on" haltonfailure="on">
            <formatter type="xml"/>
        	  <batchtest fork="yes" todir="${junit.output.dir}">
        	  	<resources>
        	  		<zipfileset src="docx4j-tests-only.jar" includes="**/*Test.class"/>
        	  	</resources> 
        	 </batchtest>
        	
            <classpath refid="testsplus.classpath"/>
        </junit>
        <delete dir="testing"/>
        	
    </target>
	
   
</project>
