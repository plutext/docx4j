<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

  <parent>
	<groupId>org.docx4j</groupId>
	<artifactId>docx4j-parent</artifactId>
	<version>${revision}</version>
  </parent>
  
	<artifactId>docx4j-core</artifactId>
	<packaging>${packaging.type}</packaging>
	<name>docx4j-core</name>
	
	<description>
		docx4j is a library which helps you to work with the Office Open
		XML file format as used in docx
		documents, pptx presentations, and xlsx spreadsheets.
	</description>

	
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<outputDirectory>bin</outputDirectory><!--  for a clean jar, be sure to avoid mixing mvn and eclipse output -->
		<testOutputDirectory>bin-testOutput</testOutputDirectory>
			<!-- NB this confuses Eclipse, in that if you modify test src, it doesn't recompile it to this dir. 
			     You need to run mvn test from the command line to recompile, then Eclipse can run 
			     the new code.  -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- The Surefire Plugin is used during the test phase of the build lifecycle
					to execute the unit tests of an application -->
				<version>2.6</version>
				<configuration>
					<excludes>
						<exclude>**/samples/*.java</exclude>
						<exclude>**/AbstractNumberingTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<excludes>
						<!--  the below are prob not necessary, now that we are building from bin-mvn, and so avoiding stuff Eclipse puts into bin dir -->
						<exclude>**/*.docx</exclude><!-- docx files in /src/test/resources add unwanted 1 MB to jar. -->
						<exclude>src/test/resources/**/*</exclude>
						<exclude>src/main/resources/README.txt</exclude><!--  sample log4j.xml and docx4j.properties are now in src/samples/_resources-->
					</excludes>
				</configuration>
			</plugin>
			
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>4.1.0</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                    	<Manifest-Version>2.0</Manifest-Version>
                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Import-Package>
                            com.topologi.diffx.event;resolution:=optional,
                            com.topologi.diffx.xml;resolution:=optional,
                            com.topologi.diffx.xml.esc;resolution:=optional,
                            net.engio.mbassy.bus,
                            net.engio.mbassy.bus.config,
                            org.antlr.runtime;resolution:=optional,
                            org.antlr.stringtemplate;resolution:=optional,
                            org.antlr.stringtemplate.language;resolution:=optional,
                            org.apache.avalon.framework.configuration;resolution:=optional,
                            org.apache.commons.codec.binary,
						    org.apache.commons.codec,
						    org.apache.commons.compress,
						    org.apache.commons.lang3,
						    org.apache.httpcomponents.httpclient,
						    org.apache.httpcomponents.httpcore,
    
                            org.apache.commons.io,
                            org.apache.commons.io.filefilter,
                            org.apache.commons.io.output,
                            org.apache.commons.lang;version="[2.4,3)",
                            org.apache.commons.lang.text;version="[2.4,3)",
                            org.apache.fop.apps;resolution:=optional,
                            org.apache.poi.hwpf;resolution:=optional,
                            org.apache.poi.hwpf.model;resolution:=optional,
                            org.apache.poi.hwpf.usermodel;resolution:=optional,
                            org.apache.poi.poifs.crypt;resolution:=optional,
                            org.apache.poi.poifs.dev;resolution:=optional,
                            org.apache.poi.poifs.filesystem;resolution:=optional,
                            org.apache.xmlgraphics.fonts;resolution:=optional,
                            org.apache.xmlgraphics.image.loader;resolution:=optional,
                            org.apache.xmlgraphics.image.loader.cache;resolution:=optional,
                            org.apache.xmlgraphics.image.loader.impl;resolution:=optional,
                            org.apache.xmlgraphics.java2d;resolution:=optional,

                            org.slf4j;version="[1.6,2)";resolution:=optional,
                            org.slf4j.impl;version="[1.6,2)";resolution:=optional,
                            
                            org.docx4j.org.apache.xalan.processor;resolution:=optional,
                            
                            org.apache.xml.utils,
                            
                            javax.xml.stream,
                            javax.xml.stream.events,
                            javax.xml.stream.util,
                            javax.xml,
                            javax.xml.crypto,
                            javax.xml.datatype,
                            javax.xml.namespace,
                            javax.xml.parsers,
                            javax.xml.transform,
                            javax.xml.transform.dom,
                            javax.xml.transform.sax,
                            javax.xml.transform.stax,
                            javax.xml.transform.stream,
                            javax.xml.validation,
                            javax.xml.xpath,
                            javax.xml.bind,
                            javax.xml.bind.util,
                            javax.xml.bind.annotation,
                            javax.xml.bind.annotation.adapters,
                            javax.xml.bind.attachment,
                            javax.xml.bind.helpers,
                            org.w3c.dom,
                            org.w3c.dom.bootstrap,
                            org.w3c.dom.css,
                            org.w3c.dom.events,
                            org.w3c.dom.html,
                            org.w3c.dom.ls,
                            org.w3c.dom.ranges,
                            org.w3c.dom.stylesheets,
                            org.w3c.dom.traversal,
                            org.w3c.dom.views,
                            org.w3c.dom.xpath,
                            org.xml.sax,
                            org.xml.sax.ext,
                            org.xml.sax.helpers,
                            antlr,
                            antlr.*,
                            net.arnx.wmf2svg,
                            net.arnx.wmf2svg.gdi,
                            net.arnx.wmf2svg.gdi.svg,
                            net.arnx.wmf2svg.gdi.wmf,
                            net.arnx.wmf2svg.io,
                            net.arnx.wmf2svg.util,
                            com.thedeanda.lorem
                        </Import-Package>
                        <Export-Package>
                            com.topologi.diffx.xml,
                            com.topologi.diffx.xml.esc,
                            com.topologi.diffx.event,
						    org.eclipse.compare,
						    org.eclipse.compare.internal,
						    org.eclipse.compare.rangedifferencer,                            
                            net.engio.mbassy.bus,
                            org.apache.avalon.framework.configuration,
                            org.plutext.jaxb.*,
                            org.docx4j.*,
                            org.pptx4j.*,
                            org.xlsx4j.*,
                            org.glox4j.*,
						    org.merlin.io,
						    org.opendope.*,
                            org.jvnet.jaxb2_commons.ppp
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>				
 			
 			<!--  mvn versions:display-dependency-updates --> 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<rulesUri>file:///${project.basedir}/rules.xml</rulesUri>
				</configuration>
			</plugin> 
 			
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<!-- beware, a couple of our resources are UTF-16, but with filtering=true, 
					Maven will break them when it copies them. -->
	
				<excludes>
					<exclude>docx4j_version.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>docx4j_version.properties</include>
				</includes>
			</resource>
		</resources>
	</build>
	
	
	<dependencies>

		<dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-openxml-objects</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-openxml-objects-pml</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-openxml-objects-sml</artifactId>
			<version>${project.version}</version>
		</dependency>
        
		<dependency>
			<groupId>org.plutext</groupId>
			<artifactId>jaxb-svg11</artifactId><!-- previously part of docx4j source -->
			<version>1.0.2</version> <!-- TODO <version>8.2.1</version> -->
		</dependency>
				
		
		<!--  events -->
		<dependency>
		    <groupId>net.engio</groupId>
		    <artifactId>mbassador</artifactId>
		    <version>1.3.2</version>
		</dependency>


		<!--  instead of FOP's commons-logging;  without this commons-graphics gives no class def --> 		
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>jcl-over-slf4j</artifactId>
		    <version>1.7.26</version>
		</dependency>		
 		 
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.9</version>  <!-- ns prefix mapper uses org.apache.commons.lang3.text.StrTokenizer -->
		</dependency>

		<!--  3.4.0: used for zip/unzip -->		 
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-compress</artifactId>
		    <version>1.18</version>
		</dependency>		 
		 
		 <!--  supports org.apache.commons.lang.NotImplementedException -->
		 <!-- 
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.4</version> 
		</dependency>
		 -->
		
		<dependency>
			<!--  required for ole introspection -->
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.12</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version> <!--  2.2 works -->
		</dependency>
		
		<!-- you can comment out if you don't want
			 to use Plutext's commercial PDF Converter.	
		 -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.8</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>        
            </exclusions>
        </dependency>
						
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.9.9</version>
		</dependency>
		
		<dependency>
		  <groupId>com.fasterxml.jackson.core</groupId>
		  <artifactId>jackson-databind</artifactId>
			<version>2.9.9</version>
		</dependency>		
		

	<dependency>
		<groupId>org.apache.xmlgraphics</groupId>
		<artifactId>xmlgraphics-commons</artifactId>
		<version>2.3</version>
		<exclusions>
			<exclusion>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
			</exclusion>		
		</exclusions>
	</dependency>

	<dependency>
		<groupId>org.docx4j.org.apache</groupId>
		<artifactId>xalan-metainf</artifactId>
		<version>8.0.0</version>
	</dependency>
	<dependency>
		<groupId>org.docx4j.org.apache</groupId>
		<artifactId>xalan-interpretive</artifactId>
		<version>8.0.0</version>
	</dependency>
		 
	<!-- Saxon for XPath
	<dependency>
	  <groupId>net.sf.saxon</groupId>
	  <artifactId>Saxon-HE</artifactId>
	  <version>9.9.0-2</version>
	</dependency>
	-->
	
	<dependency>
	    <groupId>net.arnx</groupId>
	    <artifactId>wmf2svg</artifactId>
	    <version>0.9.8</version>
	</dependency>

		<dependency>
    		<groupId>org.antlr</groupId>
    		<artifactId>antlr-runtime</artifactId>
    		<version>3.5.2</version>
		</dependency>
		<dependency>
		    <groupId>org.antlr</groupId>
		    <artifactId>stringtemplate</artifactId>
		    <version>3.2.1</version>
		</dependency>
						
<!-- Uncomment for load/save via JCR, which
		may be found in docx4j-extras.
		<dependency>
			<groupId>javax.jcr</groupId>
			<artifactId>jcr</artifactId>
			<version>1.0</version>
		</dependency>
		-->


  		<!-- svn:http://dev.plutext.org/svn/docx4j/trunk/docx4j/m2

			(stuff not available in public repositories)

			mvn deploy:deploy-file -f wagon-svn-pom.xml -Dfile=dist/docx4j.jar -DpomFile=pom.xml  -Dpackaging=jar -DrepositoryId=docx4j -Durl=svn:http://dev.plutext.org/svn/docx4j/trunk/docx4j/m2

		-->
		
		<!--  deps for our re-packaged guava -->
	    <dependency>
	      <groupId>org.checkerframework</groupId>
	      <artifactId>checker-qual</artifactId>
	      <version>2.8.1</version>
	    </dependency>
	    <dependency>
	      <groupId>com.google.errorprone</groupId>
	      <artifactId>error_prone_annotations</artifactId>
	      <version>2.3.3</version>
	    </dependency>
	    <!-- 
	    <dependency>
	      <groupId>com.google.guava</groupId>
	      <artifactId>failureaccess</artifactId>
	      <version>1.0.1</version>
	    </dependency>
		 -->
	</dependencies>
	
</project>
