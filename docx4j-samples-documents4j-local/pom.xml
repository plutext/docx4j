<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

 <parent>
	<groupId>org.docx4j</groupId>
	<artifactId>docx4j-parent</artifactId>
	<version>${revision}</version>
  </parent>
  
	<artifactId>docx4j-samples-documents4j-local</artifactId>
	<packaging>jar</packaging>
	<name>docx4j-samples-documents4j-local</name>
  	
	<description>
		example exporting docx and xlsx to PDF using documents4j to drive an instance of Microsoft Word running on the same Windows server as docx4j
	</description>
	  
	
	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<outputDirectory>bin</outputDirectory><!--  for a clean jar, be sure to avoid mixing mvn and eclipse output -->
		<testOutputDirectory>bin-testOutput</testOutputDirectory>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- The Surefire Plugin is used during the test phase of the build lifecycle
					to execute the unit tests of an application -->
				<version>2.6</version>
				<configuration>
					<excludes>
						<exclude>**/samples/*.java</exclude>
						<exclude>**/AbstractNumberingTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<excludes>
						<!--  the below are prob not necessary, now that we are building from bin-mvn, and so avoiding stuff Eclipse puts into bin dir -->
						<exclude>**/*.docx</exclude><!-- docx files in /src/test/resources add unwanted 1 MB to jar. -->
						<exclude>src/test/resources/**/*</exclude>
						<exclude>src/main/resources/README.txt</exclude><!--  sample log4j.xml and docx4j.properties are now in src/samples/_resources-->
					</excludes>
				</configuration>
			</plugin>
			<!-- maven-javadoc-plugin seems to require large -Xmx so comment this
				out if your build is failing because you don't have enough. -->
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<maxmemory>512m</maxmemory>
					<!-- 18 MB without the exclusion; still 15MB with -->
					<!-- <excludePackageNames>org.plutext.jaxb.svg11:org.plutext.jaxb.xslfo</excludePackageNames> -->
			        <additionalparam>-Xdoclint:none</additionalparam> <!-- for Java 8 -->					
				 </configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
        
		<resources>
			<!-- be sure to get xml,xlst resources in various src trees -->
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xslt</include>
					<include>**/*.xml</include>
				</includes>
			</resource>
			<!-- 
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>docx4j.properties</include>
				</includes>
			</resource>
			 -->
			<!-- <resource> <directory>src/test/resources</directory> <excludes> <exclude>*.docx</exclude>
				</excludes> </resource> -->
		</resources>
	</build>
	
	<dependencies>
	
		<!--  choose a docx4j-JAXB implementation, one ONLY of the 3 following :-->

		<dependency>
            <groupId>org.docx4j</groupId>
			<artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
            <groupId>org.docx4j</groupId>
            <artifactId>docx4j-documents4j-local</artifactId>
			<version>${project.version}</version>
		</dependency>
		
<!-- 
		<dependency>
            <groupId>org.docx4j</groupId>
			<artifactId>docx4j-JAXB-ReferenceImpl</artifactId>
			<version>${project.version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.docx4j</groupId>
			<artifactId>docx4j-JAXB-MOXy</artifactId>
			<version>${project.version}</version>
		</dependency>
	 -->

		<!--  choose your preferred logging implementation, for example: -->

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>
		<!--  1.3.0-alpha4 does not play nice with slf4j-api-1.7.26, only 1.8.0-beta2 -->
		
		<!-- 
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.11.2</version>
		</dependency>
		 -->
		<!--  log4j-slf4j18-impl does not play nice with slf4j-api-1.7.26, only 1.8.0-beta2 -->

		<!--  logging config files for log4j2 and logback can be found in:-->
		<dependency>
			<groupId>org.docx4j</groupId>
			<artifactId>docx4j-samples-resources</artifactId>
			<version>${project.version}</version>
		</dependency>
        
	</dependencies>
	
</project>
